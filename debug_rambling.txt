sim=true
2
2175

2
2175

sim=false
2
659
2870


sim == false
no intro/loading
2
1000


sim == true
no intro/loading
2
1000

even with everything off, those 2 are still being got.
why?
oh, time till reckoning and sessionType. i will initialize them to non random.


now simmode gets me 2040, with intro and loading. instead of 2175. so confused.

simodd false (so rendering) gets me
659
2870

so whether or not there is more in rendering is different for different sessions.

what if only intro, no tick
659
800

vs

1000

so rendering uses 459 more seeds. why.

okay, lets look at the "real" sim.
real page	ai finder simulation = false
977		659
2870		2870

I wonder why rendering has the console statements print
out in 2 parts, and not consistently in 2 parts?
Like...both things have 2870 as the second part.
But the first part is different. Why?

The second part seems to be the important part...
The MVP of the session was: Grim Dark Heir of Rage's Corpse with a power of: 203
The MVP of the session was: Grim Dark Heir of Rage's Corpse with a power of: 203
Both have same result, even same power (which means everything was the same, basically)

IS THE SEED GETTING RESET?
Is that why only number of seeds being got AFTER a point matter?

Nope. only called once.

Okay. What do I know?

There is a problem even in the intro stuff.
That greatly shortens the stuff I have to look into.

Simulation = false is identical to the real stuff,
so only need to debug one page.

Question: What happens in the intro (when sim=false).

Where/when does it differ from sim-true?

Both intros are identical.  But...use different amount of seeds?  Okay,
maybe directly measureing seeds isn't the best way? with regular ticks on,
 where do they start to differ?

4kmonitor ftw that i can put these side by side to compare


!!!!!!!!!!!!!!!!!!!!!!!!!
The very last thing that is the same is
The Maid of Void makes a general nuisance of themselves to the Black Queen.

Then,sim-false the Heir of Rage black flirts with Knight of Space,
 and gets rejected. Then ectobiology happens.

Then,sim-true, "
The Heir of Rage has taken an acrobatic fucking pirouette off the handle and into a giant pile of crazy. They engage Murder Mode while thinking of their enemies Knight of Space and Seer of Time and Page of Light and Rogue of Mind and Sylph of Heart and Thief of Breath. This is completely terrifying. "


Yeah, that would hella cause a difference between sessions.

So, is relationshipChat somehow using up randomness?
There is a space for a chatlog in the sim-true version...
But, the relationshipDrama should still be happening, just not being rendered....
it's not the first chat, but it IS the first relationship chat.

HR is antagonizing a jerk, which means they are indeed triggered (possibly just as much as when they engage murder mode)

printing out the text that would have been there, it is the same for both of them.
drawRelationshipChat doesn't seem to consume random.

Okay, what if I allow that thing to render, but nothing else. Does source of difference dissappear?


....What. The. Hell. It freaking APPEARS TO!? Smae MVP with same power and everything. This makes no sense.
I'm not actually even rendering anything but text, 'cause still no loading.

Alright. WHY is this happening?


Alright, well, drawChat and drawRelationshipChat are actually pretty similar. So look for their differences.

dRC gets the relationship to know if they should render heart or spade or nothing. Is that it? Doesn't appear to consume
a seed. if i comment it out, will sim-false do an accrobatic piorrette (both literally and figuarativelY)

Yep. Still doesn't make sense. But NOT rendering the heart or spade causes acrobatic pirouettes.

Look deeper.

It's not from rendering their empty buffers. still acrobatic pirouette

Is it getting the relationship? No.

Is it drawing the symbol?

Is it .....fuck. FUCK!!!!

I'm asking the relationship what type it is! That's WRONG! That's allowing it to recalculate
the relationship (for example, fall out of love). I'm supposed to be querying the savedType.
THAT was consuming the random!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!I AM THE GREEEEEEETEST!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Also, now I need to go make sure anywhere i'm using type() is saved_type unless i really meant it.

Fuck. Fuck. It's still happening though, even though i found an obvious use of random seeds.

Oh god, I just realized that before when i was rendering empty buffers, I thought it was right that it was still pirouetting.
that's wrong. damng.

Wait. no, that's actually right. the rendered version is wrong. acrobatic piroutte is right because it's when less seeds.

compare both versions.










And now for something entirely different. This is the best place to put a ramble, but it's not even at the debug phase yet.

Problem: I wish to change exactly one thing in a session, at a specific point in time.

Related information.

I have a several ways to identify a point in time in session, but none of them are currently accessible in a meaninful way.

*  Tick:  There are both regular and reckoning ticks. this information is indirectly available in the sesion's "timeTillReckoning" variable. it's negative after a reckoning.
* Scene Index:  I have a list of "scenesTriggered" in the sesion, which is how I summarize a session, partly. This list is not guaranteed to be useful. I'm pretty sure it just adds the scene in the scene list. The same scene can appear multiple times, and will in fact be changed over time (for example, corpse smooch will have different players attached to it.)


Sub problems:
* Identify an important event.
* add an event before the important event.



"add an event before the important event." appears to be the easier subproblem. I will tackle it first.
Given that I have a way of identifying an event, I need to have a scene that triggers right before that event. If it's based on tick, then trigger will happen when this.session.timeTileReckoning=x. if it's based on scenesTriggered index, then it will happen when this.session.scenesTriggered.length = x; That SHOULD be all I need.  scene should not repeat, and should have absolutely highest priority...or...hrrm.

SHOULD it have highest priority? It just needs to happen before the important event, right. But "timeTillReckoning" can have many scenes called. So if i give it highest priority, it might happen several scenes before it should.

CONSTRAINT FOUND:  Scenes need to be identified by scenesTriggered index, not timeTillReckoning. This makes sense in retrospect.


PROBLEM FOUND: scenesTriggered index will not be consistent between timelines.

I need them to be.  The whole point is that the Observer (that's you, btw) gets to make a decision after a virgin doomed timeline happens.
So,they insert a scene that wasn't there before. Which by definition alters the index of the previous thingy.



Alright, think about this in more detail.

Sequence of Events:

Session procedes on the regular and ends in tear-jerking tragedy.

At the very end, AB and I show up.

I offer the Observer and time player a yard's worth of Decisions.

Session reloads, then procedes on the regular until the time player warps in to make a change.

Session is altered. Either ends in  tear-jerking  tragedy, or in less tragedy, or success.

If tear-jerking tragedy, At the very end, AB and I show up.

I offer the Observer and time player a yard's worth of Decisions, including the decision to undo their previous decision.


Session reloads, then procedes on the regular until the time player warps in to make a change.  Both THIS decision will be implemented AND the previous decision (unless you decided to undo this.)


Repeat until either Observer gives up or there is no more tear-jerking tragedy.





So, once more:



PROBLEM: scenesTriggered index will not be consistent between timelines.

Brainstorm Solutions:

add array to SaveDoomedTimeLines.  List of scene indexes to alter.  No, make new object that has index/result function pairings?

no...if being that different, make new scene.  YellowYardResult or some shit.

If I am careful to play the new scene juuust before the old one, then....wait. okay. no.
I was going to say "resave the old scene index +1", but that won't be true every time. or even consistently. if a new scene has been added before me, add 1, else it's the same. hrrrrm...

so, YellowYardResult will also have a boolean if a new scene has been added yet. (only one new scene can be added a runthrough.) if yes, increment your scene_trigger_id. if no, do nothing.






Okay, I"m sure that's not enough to work just yet, but it's enough to start. BUT, there is still another subproblem I have not yet addressed:



* Identify an important event.

How do humans do this?

Types of important events:
	* a player dying
	* a player engaging murder mode
	* a player going grim dark
	* jack being promoted.
	* frog breeding


So, how do I decide which events to include in my Yellow Yard? Through the session summary code, I know I can find if MurderPlayer has happened. But that scene can result in a murder or result in clubs/diamonds.

Okay, well, when I say "player dying", do I mean a permanent death, or any death?

Should I have scenes be capable of creating a "ImportantEvent" object to give to their session?

That might solve both sub problems. If a scene creates the important event BEFORE RENDERING, it can trigger the session to go to it's YellowYardResult object or whatever and decide whether or not the event should be altered.

I am tentatively optimistic.


So, obviously if i was in a sane language, I'd have different types of Important Events subclass out from the main one, but javascript does not give a fuck.
Should Important Events be like scenes (i.e. a different class for each event), or should it be a big stupid jumble. Problem with different classes/files is it gets cumbersome including it in html documents and also is spoilers.

big stupid jumble it is. but like, a hybrid jumble, with the different objects in a single file.

An Important Event has a human readable label, and a function that is how to prevent that Event. (both the text/image to display and the results.  like player.dead = false. or whatever.)
It should also have an importanceRating, because if I have more than a Yard's worth, I have to trim the list SOMEHOW.

when a session is done and qualifies for a YellowYard, I display the list of important events that happened this session. One is selected and saved in the YellowYardResult object or whatever.

 Then, the session is redone. Just like before, each time an ImportantEvent happens, the session asks the YellowYardResult if it's allowed to happen.  This time, for one of them, YellowYardResult says "no".
 It says "no" because the ImportantEvent perfectly matches the saved event.

 Example of match.:

 ImportantEvent.subtype = "Player dies with a living dream self without God Tiering."
 ImportantEvent.player = "Heir of Life"


Note: this means that this Important Event can be matched even if it is under very different circumstances. For example, the timeline can vastly change, but so long as the Hier of Life still dies without godtiering, this event would be altered. Do I want this?

For the authorBot, a good way to check if a session has changed before now is the check the value of the MVP. If things are mostly the same besides cosmetic stuff, this value will also be the same.

Alright,

 ImportantEvent.subtype = "Player dies with a living dream self without God Tiering."  (automatically decides importanceRating)
 ImportantEvent.player = "Heir of Life"
 ImportantEvent.mvp_value = 342

 BAM, now altered events are mostly stable.

 Okay, where was I?

 Okay, so the YellowYardResult has found a match. it tells the session, which returns to the scene that calls it. The scene does not render itself, and instead render the ImportantEvent.alternateTimeLine(); I need to make sure this function changes all relevant variables. Or...

 Hrrm...  Let's say the ImportantEvent was the GrimDark MurderMode Heir of Life dying.   The scene kills them, (which clears our their status modifiers), and then asks if it can render the result. It is told no, and ImportantEvent.alternateTimeline brings them back to life.  But it doesn't know they were GrimDark MurderMode and doesn't restore that.

 That clearly is unacceptable.

 So, the scene should create an ImportantEvent BEFORE modifying anything. Not just before rendering.  But the problem is that many scenes modify things over time. Hrrrm.  Well, the important event can be PART of a scene.   Example, jack starts to show his stabs to the Heir of Life and the Maid of Mind, but the Bard of Time warps in and carts the Heir of Life's corpse to their sacrificial slab/quest bed.

 Okay, at this point I'm just waffling to avoid coding because once I start this will be real and WHAT IF IT'S STILL IMPOSSIBLE!?  Time to code.





 TODO:   22577

 why is page of time god tier twice listed? is it just first?  in subsequent loops its life that gets repeated

 add alternate scenes for all important events
  make player not die is NOT just an alternate to god tiering. god tiering deals with corpses, but not dying needs to be the scene that MAKES the corpse

 add scene for undoing your own undoing. basically generate list from scenesToUndo.  add before killing players list.




 Problem. Trying to remove functional duplicates from importantEvents. Objects aren't literally the same, but values are.

 Current way is looping through an inner loop and an outter loop. problem is that let's say my array is:

 [1,2,3,4,1,2,3,4,1]

 In the outter loop I look for "1".  I find it two additional times, and mark the extras for removal. I succesfully don't mark 'myself'.

 But...then, the fourth element, the second 1, when i loop on THAT, I find the first 1. And mark it for removal. And thus ALL 1s are marked for removal.

 How to fix?

 Well, I could probably extend javascripts native filter thing. But i don't want to . I'm feeling intellectually lazy.

 hrrrrm.

 Well, the inner loop doesn't HAVE to start from zero. It can start from the outter loop index. that should do it.


                          ```````   `                 `  ``   `                        ```````                           `
                      ```` `   `   ````           `````   `   `````               ````  `   `` ````                ````  `   ``` `
                   ```               ````        ```             ````           ```                ```          ```             ````
                  ``                   ```      ``                 ```         ```                  ```        ```                ``
           `````..``.`..`````````.``.``-``.``..`..``.```.``..``.``.``.``.``.``-`.-``.``.`..``.``.``..`..``.``.``.```..``.``..`..````..````
           `.-............-..-...-.....-........................................................................-.......................-.`
           `.-..........................................................................................................................-.`
           `......:-....-::::::::::----:++++++++++++++oo+++::::::::::::::...::::::::::::::---------::::::::::::::::::::::::::-....-:......`
           `.-..../.                 -ohddddddddddddddddddhh+`           `.`                                                      ./....-.`
           `......+.              .+yhddddddddddddddddmmmmmddy.          `.`                            `     `                   .+......`
       `````.-....+.           `:shddddddddddddddddmNNNNNNNNmdy.         `.``.+o+.`  `.oo/.           .sh   .sh                   .+....-.` ```
     ```   `......+.         -ohdddddddddddddddmmNNNNNNNNNNNNmdy`        `.`  +d+      sd:             yd    yd                   .+......`   ```
     ```   `.:....+.         .yddddddddddddmmddNNNNmshNNNNmmNNmdo        `.`  +d+      sd-    ---:.    yd    yd    `---:.         .+....:.`    ```
    ```    `......+-          `+hdddddddddms:-hNdyo.``:shmN+omNdh-       `.`  +do------yd-  -s.``-ho   yd    yd   /o```-ss`       -+......`    ```
    ```    `.-....+:            .ohddddddy-``.:-.````````.-:`-NNdo       `.`  +d+``````yd-  yy:::://`  yd    yd  -h:    -do       :+....-.`    ```
     ```   `......+-              .+hdddds```````````````````.NNmh.      `.`  +d+      sd-  yh.    .`  yd    yd  :do    `d+       -+......`    ```
     ```   `.-..../.                .sddddy-`````````````````+Nmdo`      `.`  odo      yd:  -yho//+:   yd    yd   +h/` `/o`  /o.  ./....-.`    ``
       `````....../.                 -yddddh/```````````````/dyo-        `.``.:::.`  `.::-`  `-//:.   .::.  .::.   .::-..    -/`  ./......` ````
        ````......+.                /hddddddds:``````````.-/:.`          `.`                                                      .+......````
           `......+.               -ddmddddddddo-..-//+ohms              `.`                                                      .+......`
           `.-....+.              -hdNmddddddddddhhdddddyNh              `.`                                                      .+....-.`
           `-.....+.           .-ohddmdddddddddddhhdddddso:              `.`                                                      .+.....-`
          ``......+.          .ohdddddddddddddddhs/ddddddh:              `.`                                                      .+......`
        ````......+.         ```:hdddddddddddddh+--/hdddddh-             `.`                                                      .+......`````
      ```  `......+-      ``````.hddddddddddddho....+dddddy`             `.`                                                      -+......`  ```
     ````  `.:...-+:   ``````` `odddddddddddddo/-..-+sdds/.``            `.`                                                      :+-...:.`   ```
     ```   `....../-`````````   :sssssssyyyyyys+o++o+syyo `````          `.`               ````````````````                       -/......`    ``
     ```   `........````````````--------:::::::::::::::::.````````````````.````````````````````````````````````````````````````````.......`    ``
     ```   `....../```````      -+syyyhhhhhhhhhddddddhyo/.    ```        `.`                                                      `+......`   ```
      ``   `.....-+`   `````       ``.shdddddddddddddo         ```       `.`                                                      `+-.....`   ```
       ``` `.....-+`      `````   ````-/hddddddddddddh-         ```      `.`                                                      `+-.....`  ``
         ```.-...-+`          ````````..:oddddddddddddh.         ```     `.`                                                      `+-...-.```
           `.....-+.                 :shyddddddddddddddy.         ```    `.`                                                      .+-.....`
           `.-...-+.                 sddddddddddddddddddy.        ```    `.`                                                      .+-...-.`
           `......+`                 ydddddddddddddddddddh.        ```   `.`                                                      `+......`
        ````......+`                -hydddddddddddddddddddy`        ``   `.`                                                      `+......`````
      ```  `......+`                +hsdddddddddddddddddddds`        ``  `.`                                                      `+......`  ````
     ```   `.....-+`                +y+hddddddddddddddddddddo         `` `.`                                                      `+-.....`   ```
     ```   `.-...-+`                ys+yddddddddddddddddddddd/         ` `.`                                                      `+-...-.`    ```
     ```   `.....-+`               -d++sdddddddddddddddddddddh-        ```.`                                                      `+-.....`    ```
     ```   `:....-+`               -s++ohhhhhddhdddddddhhhhyso+        ` `..`                                                     `+-....:`   ```
      ``   `.....-+`                .++++++oooo-::::/oooo++++++.         `..`                                                     `+-.....`   ```
       ````..-...:+`                -+++++++++/      :+++++++++/         `.`                                                      `+:...-.` ````
        ```......-+.                -+++++++++/       /+++++++++.        `.`                                                      .+-......```
           `.-...:+.                -+++++++++/       `+++++++++/        `.`                                                      .+:...-.`
           `.-...-+-                -+++++++++/        :+++++++++`       `.`                                                      -+-...-.`
           ......./:...--:::::::::--://///////:......--://///////::::::::...::::::::::::::--------:::::::::::::::::::::::::::--...:/.......
           ..-..........................................................................................................................-..
           ..-........-...-..-..................................................................................-..............-........-..
           `````-``.``.```.`````..`..`..``-``-``-``..``.```-``.```.``.`..``.`..`..`..`..`.``..`..``-``.``.``..``.```-```.``-```.``.``-`````











Okay, now that THAT's out of the way....

time to update the Rare Session Finder.

my original thought was to have a new page entirely, where you can pick what you want to look for from a drop down menu, and then AuthorBot prints a list of sessions out that match your criteria.  But karmicRetribution has an intriguing idea: On the 'stats' section, have them be clickable to filter sessions out.

So: Design time.

~~~~Sequence of Events:

Page is loaded.  Can pick number of sessions to check, and click "check sessions."

Stats for All Sessions updated with each session, and stats for A session print below.

Click on a total stat line, and it filters sessions to only be ones where that value is 'true'.   Total stats now only reflect filtered list?  Button added to delete all filters.
~~~~~~~~~~~~~~~~~~~~~

So, I will have to refactor some stuff.

Right now the way total session stats are calculated is each session adds to a global variable when they are asked to summarize themselves. if i were to call that multiple times, it would inflate the value. and there is no way to get it for only a subset of sessions.

bluh. bob warned me about global variables. he told me, dog.


So, instead of having global variables, have each session contain a summary object (much like a player snapshot).  When I ask for a session's summary, it generates this object.  Move the "summary HTML" code outside of the object itself. just make it a global function. Then, I get combo stats by asking all sessions in an array to give me their stats.

have sessions array, and filteredSessions array.  Sessions array is never modified. filteredSessions array is always a object by object copy (even if there is nothing to filter by).

what happens if they check a session while it's filtered?



bluh, okay time to actually try filtering.

I can test to see if a session summary has any arbitrary variable filled. won't help with frog leve, but baby steps.

but...standard array filtering doesn't work that way. it wants you to specify the variable in advance. so maybe will have to have a lot of bullshit methods?

sequence of events:

click on collated stat. calls method, giving the parameter name to the method.  method mostly just filters based on parameter name, with a few being special.

that's what I WANT...but Array.filter only lets me pass an object in, not anything else....right? Confirm this.  yeah....seems like it.  can just write my own, linear time code.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




okay. time for the main event.

SHIIIIIIIIPPPPING!

can label a relationship as being in a quadrant now. want to carefully refactor things to check on them.

if <> killed, super fucking trigger plus super-hate killer should be insta-murdermode.

as long as you have a relationship of type <>, less likely to engage murder mode.

if you try to kill c3<, middle leaf intervenes if able.

can do break ups, or cheat.

~~~

Man. I spent all yesterday making easter eggs and hiding links for them. And then giving a bonus to my tumblr followers by violating the easter egg aesthetic and giving them links to them.

I kind of...want to do something with that for 413. No way I'll get my next major feature (character creation) done in time...but I still should do SOMETHING, right?

I'm thinking riddles.  Ask some sufficiently obtuse question, and the answer is expected to be a seed id. if you enter a seed id that fits the riddle (from it's summary), list of various easter egg urls (including maybe a link to THIS whole mess) are revealed.

would that even be fun or cool?

......
Bluh. For the record, can I just say that the medical tv show "House"  is complete bullshit. Like, I get that it's fiction. But you still figure that there are magical hyper-competant doctors out there that can DIAGNOSE you. Like. In this day and age shit being left undiagnosed is such bullshit.
Especially when the internet is just there, telling you about all these cutting edge tests for various bullshit diseases that no actual doctor has ever heard of. Or genes that are definitely diagnostic of something that it turns out there are no commercial tests for.  Hope you live near the one lab on the planet that developed those gene tests, buddy.  Although I guess at this point the list of shit I could have is pretty incurable. So. Diagnosis is more solving a puzzle then something actually useful. bluh. /rant.
.....


Okay. Let's focus. Fo-cus. Focus! (Magic Cupcakes by Octopimp on youtube has just corrupted that entire word for me.)  Today's goal is to let people break up from their quadrants, even though that should be hella rare.

THINGS THAT CAN TRIGGER A BREAKUP:
* Feelings change
* Cheating (on either parties part.)

I figure "feelings changing" shouldn't be an automatic breakup session, after all inertia is totally a thing.   And I want to move away from using seeds if I can help it for a variety of reasons.  I dont' have enough claspect specific stuff going on right now.

Some classes will hold onto a relationship for longer, regardless of why a break up might be valid. Maybe different inertial rates depending on the event.

If I am a Knight AND I am cheating on you, I confess and break up with you. Seems chivalrous. (although maybe NOT cheating would be better, but cheating is already rare enough, I'll leave it as is.)
If I am a PAGE in the same situation, maybe I just sort of let it...keep happening.  Or a Rogue, like Rufio and Damara.

So, break things up into Active/Passive lines?  Not all the Active/Passive stuff is known...but I can make educated guesses. It's not like it'll be explicit.
I can also have a few Interests (like whatever superclass "Romance" is in) influence your odds of calling things off. I figure if you are good ar romance you migth be more likely to be honest and open? and terrible people just...arne't.

Meanwhile, if your partner is cheating on YOU, chance of finding out and breaking up with them.  This tends to result in much worse feelings.  Triggers and hate and what not.  Damara went into murder mode, basically, after she found out about Horrus.

MurderMode would probably be a MUCH more likely option in the case of diamonds cheating.

Clubs cheating is totally not a thing.

Oh! And if there is a heart player, everybody is MUCH MORE LIKELY to be open and honest (thus reducing the murder mode freak outs). Cause hell, if you don't tell them you have a new <3, then the heart player might.




PROBLEM:

If CorpseSmooch takes priority over GetTiger, then MOST players will only god tier through sacrificial slabs.  But if GetTiger takes priority over CorpseSmooch, ALL players will god tier the first time they die and not leave any for Sacrificial Slab. That's because CorpseSmooch is a one time thing. If you don't get smooched, your dream self dies and you are no longer eligible for smooching. (Note to self, maybe let usless smooches happen, creepy Gamzee style). But GetTiger happens so long as you have at least a dream self and are destined to god tier.

BLUUUUUUUUUHHHHH.

Okay. Think.

You SHOULD be able to do multiple scenes in a row. That's what the availablePLayers array is for, right? Is GetTiger ever setting a player as unavailable? If so, just undoing that will acomplish two things:
1.) If a player fails to GetTiger, they will then hit the corpse smooch, which will leave them ready for the sacrificial slab the next time they die.
2.) GodTier players get a free extra action. They are Gods, don't worry about it.

Huh, no, I don't seem to be setting available players. So...why...why isn't corpse smooch being called next?
Okay, adding some console output, and it looks like Corpse smooch thinks there are no dead players. Look into GetTiger. Is it reviving them regardless of what I do?  Yes. Yes it is. Okay then, return when random chance says no quest bed.

Heh. Also, don't render them 'reviving' if they haven't. Duh.


from DestroyerTerraria sent 11 minutes ago
"X of X is fucking pissed at X of X. They'll get thrown the fuck down by their lyrical flow, Get their asses kicked with words that cause em woe, Gonna bust every rhyme they could possibly know- X of X started some SICK FIRES, YO!"

Oh god. How much of my life is going to be sacrificed to making the worlds shittiest rap engine?  Focus:

Priorities:
* Claspect Character Creator
* Some claspect customization
* Shitty Rap Engine
* Cosmetic/Interest/KernelSprite Character Creator Upgrade.
* Refactor battle system for luck/hp, etc.
* More claspect customization


TODO: First thing is allow class and aspect to be chosen. Won't be very different from the OC_Generator (does that thing still work?). Basically, step one will be having the Observer input a session ID to replay/hijack/override. Then, load the players from that session and display them. Drop downs over the sprites let you change Class/Aspect for each player. Sprite updates with the new claspect. When it's to your liking, can click "start", and session begins BELOW character creator (don't vanish it cause they might want to see their chars in a pristine state.)

		Challenges:
		* Handling graphics.  For the regular sim, I just preload all the graphics that will be used and call it a day. This is fine, but with a character creator, I don't KNOW what graphics I will use. Should I preload dozens of hair, for example?  MB's been poking me to do asyncronous image loading, but it has it's own challenges, which is why i went away from it in the first place. I will need to stop and THINK about this.
		* Sharing sessions. Can't just use session IDs anymore. Will need to serialize the player data in some fashion. Write to image, along with pictures of their players? Might be neat.  Top border is random-looking stuff that's actually the encoded session, and underneat it is the human understandable: here's what the players look like. Ah...but...how will they UPLOAD the image so I can recreate their custom players. Do I really want to bother having a server that isn't dead simple?  I guess I could have them upload it on literally any image hosting site and then just give me the URL? But...what if the hosting site warps the image (like, by compressing it). Table this for now.


Who am I kidding, it's Rap Battle time.

So, basic idea outlined by recursiveSlacker is one of finding a word in both arrays.

wordsThatRhymeWithNo = [a,b,c,d]
nounsAboutPopCulture = [c,d,e,f]

so i might get c and d outta that.

Want to have points though, no how good the rap was and how sick the fires were....is "And it don't stop" still online? Get templates for raps.
nope. but can go to cannon.

Sit your ass back down 'cause we got shit to settle.
Just park ii on my grill you be whistling like a kettle
If rap's a one wheel device your foot don't reach the peddle.

Hrrm.when tavros and gamzee have one of teh worst rap offs in paradox space history, they talk about their INTERESTS. I really want to do that.

iMAGINE AN ARRAY OF BEATS THAT SET LIMITS,
AT: tHEY GOT A RULEBOOK, iT DOESN'T PAY TO SKIM IT,
AT: bECAUSE, tHERE'S NOT A LOT OF LATITUDE,
AT: tHEY WON'T STAND FOR AN ATTITUDE,
AT: aND, cROSSING THEM'S A HABIT YOU'D,
AT: (nOT REALLY WANT TO GET INTO BECAUSE, uHH),
AT: tHEY'D GET PRETTY MAD AT YOU,




switch gears right quick.  AuthorBotJunior has to be a thing.


objective: be able to filter by:

# of players in session (2-12)
claspect  (two drop downs, like oc_generator)
interests

want to also display other initial stats like interests, initial relationships.

Okay, the individual session summaries (junior) is working beautifully.  Players, Sprites, Interests and Ships.

But...filtering is going to be way harder. Don't want a list of 144 check boxes and then some, right?

So....think.

For number of players, could have a range bar like I do for how many sessions to show. Okay. Solid idea.
Will probably have to redo my "filter" code...dont' even remember how I did it, tho.

As far as interests and sprites, can filter by category?
HelpfulSprites
UnhelpfulSprites
DisastorSprites
FortuneSprites

etc.

Ships...don't even bother filtering. Like, seriously. Unless somebody asks.

Claspect will be the hard one. Maybe display a grid of checkboxes, click checkbox to show only sessions with that claspect?

BUT it's not just about filtering, right, also about displaying uberStats...


think.

Start with the basics.  I KNOW I want to do this by number of players, because that was the initial request. So. Do that. Everything else is a bonus feature that i don't need to do right now.

Okay, the stats look good, and I have the range input for number of players, but it's not wired up.

Without reviewing how I did filtering before, given that right now I ONLY want to filter based on number of players...
What's the best way.

Take the sessionSummaries, and reject any that have a players.length that doesnt' match the chosen value.

That doesn't seem hard, probably can extend javascripts' filter method.

QUESTION: why is the Bard of Heart doing bullshit sidequests when their land level is only 7. And their power fucking sucks.  Shouldn't land quests be a priority???
Goddammit. how long has this been going on? fucking slackig players.

oh. wait. false alarm. they only need a land level of SIX to be done? Who fucking decided that. Okay. did I do that so they fought their denizens more? fuck it, dial the difficulty up. way too much bullshit sidequests.



okay, new problem, why does the thief of space, who did NO frog breeding....do bullshit moon parties instead of their JOB??? why are all these players so distractable?

Huh...apparently players who have finished up their lan quest AND players who have done zero land quests can do moon parties. I know I don't let players do plot shit IMMEDIATELY after entering...how do i judge that?
power needs to be greater than 2. so is this space player just...NEVER leveling up? wth.
No...they end the game with a power of 9. Not, like...great. but not zero, either. Of course, they may have only gotten that high at the last minute.
Okay, maybe make moon bullshit and sidequest give them a tiny power boost.
Ah, no there we go. for bullshit side quests, player1 gets a small powr boost, but player 2 didnt'. fixed.

 I really need to implement that power graph I've been meaning to do.


Alright, no distractions, character creator time.
TODO: (in order)
*  Write a "load fucking everything script". See how long it actually takes/how stable it is. Don't worry about lazy loading until it looks like I need it.
*  Given a session ID/random session ID, render the players to the screen. Take inspiration from how far apart they are on the oc_generator.html.
* have a button that says "start session". when you press it, characters vanish, session starts.
* have the ability to change class/aspect (through drop downs) for each player. confirm can still start session.
* alert error if no space/time player on start. don't let it even start.



What are some things that freeWill can do versus luck?

Free Will:
	* decide to get out of/ into murder mode.  (but not grimdark. if you're grimdark you don't CARE that things won't end well)
	* god tier suicide.
	* kill a murdermode player.
	* Call off the "exile jack" plan.
	* Insist ectobiologist does his goddamend job. (raise their power to min requirement)
	*insist space player does their god damned job. . (raise their power to min requirement)

Good Luck:  (different events have different odds. can have different flavor text, too.)
	*die to trash mobs, but right next to your quest bed (only if god tier destiny)
	*trip over a treasure chest full of sweet sweet grist (boost to land level)
	* accidentally solve a group of consorts problem before you were even aware of it. (boost to land level)
	* find a rare enemy that gives you a BUNCH of exp when you kill it.
	* find out something that makes someone like you a lot more.

Bad Luck:  (different events have different odds. can have different flavor text, too.)
	* die to trash mobs.
	* get grist stolen from you by an enemy (lower land level)
	*accidentally ruin a quest line entirely (lose land level)
	* spend WAY too much time fighting an enemy, only to discover it doesn't drop any loot and you don't level up from beating it.
	* Accidentally say the wrong thing and someone likes you a lot less.



Okay, so, like random lucky/unluck events are easy. You roll a metaphorical dice, and do what it says.

But mind is all about DECISIONS, not luck.

How should I do this? I can't just freeWill lock certain events, because then you'll have a single player doing it every single damn turn.
It needs to be logical...think think think.

ignoring code, how would it actually work? how DID it work for terezi? She was aware of the consequences for NOT killing Vriska, and so choose to kill her when she otherwise wouldn't.

Problems:
	* I am not currently pre-simulating things.
	* It is extremely hard to actually know WHY a given outcome happens. That's the whole point of the YellowYard...it's hard even for humans.
	* not all players care about avoiding doom. some WANT shit to go bad, like Damara.

Now, I can still allow there to be non-luck based randomness. It could account for "this is a complex decision and I'm not going to get into details".

So, as an example...why would a player DECIDE to engage murder mode. Well, for one, they need to hate someone. That's non-negotiable. I guess they also need to not be spades with the person they want to kill.

So, unlike LuckStuff, I can't decide that I'm "lucky or unlucky" at trigger time and then later decide what that actually means. I need to be consistent.  I might be tripping free will, but not have anything I actually want to do.
So, decide what you're going to do at trigger time and store that till render time.




http://purplefrog.com/~jenny/SburbStory/index2.html?seed=47189
bug fix: 47189  trying to break up a relationship that no longer exists after a 3x combo session + yellow yard.

Initial thoughts: wth, that shouldn’t happen. i am CLONING the foreign players especially SO they will show up after a yard.


at first yellow yard, 4 players. Maid of Time, Witch of Space, Witch of Void and Seer of Time. 2 players cloned on arrival. Witch of Void and  Seer of Time.
post yellow yard: 4 players. 2 aliens cloned on arrival. names all seem right.  is it doppelgangers again?

BLUUUUHHHH.




Goal: Have AB not get caught in glitchy, corrupted sessions. She never returns.  The first step was being able to catch session crashing, which I can now do (and print out bullshit about horrorterrors)

problem, session stops ticking after error. this is fine. my error handling code can grab mark a session as corrupt. how can i trigger AB to continue on with the next session?



GrimDark Refactoring TODO:
have stat that is CorruptionLevelOther. have various things raise it. (corrupted land, corrupted sprite, etc.) every 100 points, raise grimDark level tier and go back to zero.
make grimDark 4 level tier, not boolean. 0 is none.  1 = Zero out Relationships. Break game some. 2 = Break game more, small power boost. 3 = grim dark font, grim dark halo, do nothing but break game.


Add grim light corruption as well. think about what this means (do they counter each other?)










okay. let's think this through.

Problem:  AB is returning from a single session EIGHT GODDAMNED TIMES.

Context: I'm upgrading AB to be able to handle scratched sessions. I carefully locked out the various ways she can 'return' from a session to either be through scratching, or through winning, OR through losing a scratched session. At least...I think so.

Okay. turns out I need to check to see if a session was already scratched beofre auto scartching. duh.

but things are weird still. no session scratched, but two extra sessions show up.  session with combo and without are treated separate? and combo is twice. BLUH.

okay. so. what's going on there.

Current Behavior: Look for 1 sesssion. If scratched, renders 3 session summaries. 1 pre scratch, 2 post scratch. What the hell.


if(!session.scratched){
		console.log("scartch")
		session.scratchAvailable = true;
		summarizeSessionNoTimeout(session);
		scratch(); //not user input, just straight up do it.
}

i can confirm the above only gets called once. so...what is happening.  is summarizeSessionNoTimeout calling intro or anything like that?

intro
scartch
intro  *2
victory   *2

So. I am calling "intro" twice for the same session. How?

or...maybe not? not happening here:
start session  find_rare_sessions.js:245:2
intro  find_rare_sessions.js:648:2
scartch  find_rare_sessions.js:292:3
intro  find_rare_sessions.js:648:2
victory or utter defeat * 2

GLAR. Okay. So...is the same session returning multiple ways? look for mvp on print out. !!! That's IT!  MVP is DIFFERENT between the two sessions.


Fuck. What does this mean.


Okay, new tactic. Now for some reason session ID never changes even if hit button multiple times. Why? How? not a scratch.  huh. that might be a regular bug. or a preexisting one. looks like i only set new seed if there is more to do. if only doing one, don't.  is it related?

nope. scratch bug still there even after fixed. bluh.

okay. so. like. sometimes two intros are called.  and sometimes they aren't.  sometimes summary is called twice. sometimes it's not. and it doens't matter if intro was twice.
why might a summary be called BEFORE a session is done. seems to be my "victor or utter defeat" section.

curSessionGlobalVar.won || living.length == 0 || curSessionGlobalVar.scratched
oh damn, THERE it is.  maybe. hold on need to look around.
see, like, that code should only be called during aftermath, which should only be called once. that can't be the problem even though .scratched is a pretty generic thing.


sessions simulated has 3 sessions in it, all with same ID. should only be two.  Pre scratch and post scratch. ....




okay, new tactic. there are two places in the aftermath where the scratch button is rendered.  one if no frog. one if sick frog.  If sick frog, does combo check AND renders scratch button. what does that mean. do i...hide the button if it's a combo instead?
probably a distraction. i see the bug hits even when full frog.

change tactic again. the problem is multiple sessions are going at the same time. Or is it? How to confirm. print when tick?
okay, progress.  It looks like everything goes according to keikaku...but then...when the reckoning tick STARTS the session splits in two. one summarizes immediatly, the other goes into the reckoning. I know scratches can be called prereckoning. what else?

is....is doomedTimeline true? if it were, that might be weird.


oh shit oh shit oh shit. new theory. I'm seeing multiple "should be done" popups. Iv'e been ignoring them as a separate poblem, but very clearly they aren't. think.
before i click the first popup, i see two sessions in the print out.  it's only AFTER clicking it to I see the third session and IT's popup. Which session is wrong. Number 2 or Number 3?
Only one way to find out. actually physically visit the session and see what post scratch looks like.

Oh fuck. NEITHER of them are true. Okay. that's important, too. It would make sense if there were two simultaneous sessions going on they'd be stealing each others random seeds.

only see two sets of reckoning ticks. it's like the second one "finishes" before the reckoning and then starts up the second one?  mvp of second session appears to be the initial values of the session. so...it summarizes itself really early on?

made sure doom gets set right for scratched sessions.
victory or utter defeat  find_rare_sessions.js:368:5
summarizing: 135789202 doomed: false  find_rare_sessions.js:421:2
reckoning tick -11false  find_rare_sessions.js:348:2
no scratch  find_rare_sessions.js:297:3
victory or utter defeat  find_rare_sessions.js:368:5
summarizing: 135789202 doomed: false


so...it looks like it tries to...tick itself again?


...
...
Hypothesis: summarize setsTimeout without updating the session (somehow). tries to tick a mostly done session, which forwards to reckoning tick. cause no more time till reckoning.
no, it really looks like setTimeout for new session never called. but something there feels right. go tak ea walk. get a snack clear head.

Alright focus up, five minutes on the clock, only problems, no solutions.

* it APPEARS that a session is being run twice at the same time.
* three sessions are being rendered, and I only expect 2.
* i know there are multiple ways for a session to be "done". as such, my "time to render a session code" is hard to read.
* two sessions render before a popup, one renders after then genreates it's own popups
* a popup happens when a session is summarized adn there are no more sessions to summarize.
* i make sure to not count a prescratch sessions as towrds the session quota.
* neither post scratch session is "real".
* at least one post scratch session appears to be the initial conditions of the session. no confirmation though.
*a session can be done mid tick, before the reckoning or during it or in the aftermath.
* the repeated session summary claims to be rendering after the aftermath.
* a "scratched" session is the SAME session, just reinited.
* multiple parts of a ticking session can render the scratch button. i dodn't remember evern seeing more than one scratch button, though. do they replace each other???

five minutes are up.
if...if...I render teh scratch button and THEN do the aftermath...wouldn't i get the behavior i'm seeing? it's still the "first session" summarizing itself, but it appears to be the post scratch one 'cause it's already processed.

not perfect. but...i'm getting closer. i see that ticks are interupted by reckoning ticks midway through the first post scratch session. it must 'rescratch' then or something. okay. try....

intro  find_rare_sessions.js:661:2
victory or utter defeat  find_rare_sessions.js:373:5
summarizing: 20729783 doomed: false  find_rare_sessions.js:427:2
tick 28false

So, current observed behavior is intro, immediate AFTERMATH and then summary, and then I start ticking.  This is bass fucking ackwards.
I have a variable called "pleaseIgnoreThisSEssionAB" and it's doing nothing. so. it must be set to true....

progress. aftermath can call a scratch. the next thing the rRECKONING TICK does is check for combo for victory and render summary. see if this fixes it.
how to distinguish between a freshly scratched session a post scratch session. oh. my plz ignore variable.
so frustrated still seeing it.  I have wasted HOURS on this.
problem, can't have new session's pleaseIgnore be false on intro. intro somehow called BFORE i finishe processing after math.fucking asyncronous code.


about to trigger aftermath  find_rare_sessions.js:359:3
scartch  find_rare_sessions.js:292:3
no timeout summarizing: 143713195  find_rare_sessions.js:474:2
reinit  find_rare_sessions.js:311:2
intro  find_rare_sessions.js:661:2
aftermath rendered  find_rare_sessions.js:362:3
checking if i should do summaries  find_rare_sessions.js:368:3
victory or utter defeat  find_rare_sessions.js:374:5
summarizing: 143713195 please ignore: false  find_rare_sessions.js:427:2
tick 13false


k.
just triggering the aftermath is enough to cause a scratch.  even before it renders.  and intro for scratched session called before...before....Fuck.
Okay. this suddenly makes sense.

Sequence of events.  Aftermath triggered. Aftermath begins to render, midway through renders the scratch button which CAUSES a scratch which CAUSES an intro.  async bullshit. then the scratch returns, which lets the aftermath finish rendinger.

How to fix?

How to distinguish between a fresh session and a old one. number of ticks!

fucking FINALLY. AB can do one scratched session correctly. okay. lets see if she can do more than that.

yay. new problem. i think AB is scratching too early or something. maybe need to let the aftermath finish rendering. i don't know. the scratched sessions' she's finding are all wrong.



~~~~~~~~~~~~~~~~~~~~~~~BLUH~~~~~~~~~~~~~~~~~~~~~~~~~~~


Bluh. New brainstorming session. The next feature I want to work on is denizens.
I want denizens to have 'infinite' of their aspects associated stat. will that make them unbalanced? always dodging, for example. always getting a lucky break.  maybe...maybe "infinite" means "1 more than the player has." or something like that? bluh.

in addition to denizens, i want denizen minions (like the typheus minion) to be a mini boss.

if landLevel < 6, then do any of first 6 quests (completely generic). fight minion.  If landLevel < 12, then do any of second 6 quests (3 from class, 3 from aspect).  fight denizen. then, do any of third set of quests. (post denizen). these quests give you fraymotifs. can also get fraymotifs through luck events (isntead of raising power)

so......what's stopping me here? there's no real cognitive challenge. is it just inertia? deniznes won't even be that special 'till i do fraymotifs and i won't do those just yet.

Okay. Step one, make a list of "generic quests" that anybody can do.  Make sure DoLandQuest pulls from them first and not their claspect quests.

wait, no backwards. existing quests are pretty generic, make new ones that reference the denizen. glitch faq had some good examples. denizen fucked over your planet in some way, you have to fix it.


what should I do?

damn. grist might have to be a thing for ultimate alchemy.






Alright, I was in the middle of letting the ghost powers work during battles when it was brought to my attention that yellowYards aren't working as well as I thought they were.

I have confirmed that ghosts are still banned from interacting with the session until the timelines divurge...so....what is different.

First guess would be that the seeds are being eaten differently.  gonna look at the same session side by side, one yarded and one not and see what is different.
I know at first glance the yarded one has a total party wipe, so my hypoethesis has legs.

Yes. very, VERY obviously seeds are different early on. WV is doing different stuff, quests are going randomly different



"The Bard of Time initiates a strife with the Hephaestus Minion.



The fight is over. Hephaestus Minion is dead. "
Whelp. That's what I get for blaming ghosts.

Whelp. That’s what I get for blaming all my problems on ghosts like a superstitious oldtimey dude. Looks like the problem is that after a yellow yard, the fucking BOSSES ARE SPAWNING DEAD. And OF COURSE when I tested, I apparently chose the least competent sessions in Paradox Space, so they hadn’t managed to really defeat anything so their session were going pretty much the same even after a reset.








~~~~~~~~~~~~~~~~~~~!!!!!!!!!!!!!!!!!!!!!


slowest thing is swap colors.  what if i kept characters in memory and only rerendered when necessary? Or.........what if...what if I
 rendered each sprite to a dedicated hidden canvas. And then just grabbed that sprite as needed. Each player knows where their sprite lives and knows .....wait.

 wait wait

 Okay.  Base sprite is body, hair, colors, horns, fins, etc. all that shit.

 Render stuff on top of that right? blood, stabs. grim dark aura goes behind.

 So, the only time the BASE sprite changes is:

 *  When you go grim dark (skin color darkens)
 *  When you go god tier ( body changes )
 *  When you are a dream self  (body changes  )


everything else is layers and rotations and.....



.....

it might finally be time to upgrade the rendering engine.




Okay, let's fucking do this. I've long since been hiding canvases. What's 12 more canvases?

Problem: when should the first render occur. If it happens at charcter creation, won't get custom character or easter eggs.  If it happens at intro, what happens
if char is chatting with char this not yet rendered.  if happens in big stupid pile at sesion start, won't there be slow down???

that last one was a question. so. answre it.


Okay: What part of a character is DYNAMIC other than base sprite:

* grim dark aura (but we changed your skin color anyways, so throw that on)
* wings, but we changed you to god tier body anways, so throw that on.
* stabs...but you're dead....if you get revived....think about this.
* MURDER MODE SCRATCHES/SCARS!!! There we go. um.

honestly, probably easier to re-render the sprite at ANY change.  but how to know there was a change? oh wait, that's right
I render to the sprite in the scene or wherever the change happened. drawSpriteNew only called from scenes and only called TO the secret
canvas.






AB has gone a little crazy, specifically with combo sessions. :(

seed=670898551

When viewed by me, does a combo session.

but when viewed by AB, she scratches it before the combo happens, and then reports that the scratched session is a combo session.


To me, this means she needs to not scratch if it's going to keep going.


let's find otu how to make this a thing.

Alright. Let's refresh my memory on exactly how AB scratches sessions.



if it's a combo session, i don't even render the scratch button. Right?  So AB is somehow getting the option to scratch sessions that should be combo.
regular sessions only have scratches be an option AFTER process combined session.

I remember in this very text i was upgraded AB to handle scratches.  So...why did I choose to do things different.  let's review.







~~~~~~~~~OK, AB is acting up.

If there is a sick frog that is NOT a combo session, shes' not scratching.

Need to find out why.   (She is totally sulking about how I told her she can't scratch mid-combo session)

~~~~~~~~~~~~~~~~~~~~~

Huh, the light player is being revived with a mind control symbol, but isn't being mind controlled until the next turn. setting a break point on mind control reveals that they are in fact not yet rendering the revival.

Do i have a stray timeout wandering around?  I am definitely making a snapshot of the light player, should i make one before even calling renderSprite?

light player IS rendered as being mad at the breath player befoer the mind control happens, no mark. 

AHAH, yes, stray timeout that ALSO explains why sometimes god tiers would "revive" dead.  that bug is fixed!



~~~~~~~~~~~~~~~~~~~~~

Okay, let's plan this out, sequence of events:

* players edited in character creator
* link generated to send into SBURB (you monster)
* index2.html loaded.
* session.makePlayers called.  makePlayer generates correct number of players, but then replaces them with players from URL.  (IF AND ONLY IFF SESSION.SESSION_ID == PARAM SEED (don't do this for combo sessions you dunkass)
	*  recalculates all things that were part of initialization.  chatHandle. Land. level names.   dont' recalculate other things, like kernel sprite (even if you're a troll now), or relationships.
	*  guardians match players that DID exist, not replayed players.
	* should handle things for yellow yards??????????????????????????????????????????????????????????????????????????????????????????????????????


Alright, let's compare this plan to reality.  

scenario_controller2.js has:

curSessionGlobalVar.makePlayers();
curSessionGlobalVar.randomizeEntryOrder();
curSessionGlobalVar.makeGuardians(); //after entry order established

So, if I implemented my change in MakePlayers, then the entry order would get randomized from the char creator. And the guardians would resemble the created characters (do I want that?)

But if I make it by a fourth call, run the risk of forgetting to call it sometimes.  Could have a session far be all "init" and it calls all four?

What does a yellowyard or otherwise reinitialized session look like, just in the controller?

function reinit(){
	available_classes = classes.slice(0);
	available_aspects = nonrequired_aspects.slice(0); //required_aspects
	available_aspects = available_aspects.concat(required_aspects.slice(0));

	curSessionGlobalVar.reinit();
}


function restartSession(){
	$("#story").html('<canvas id="loading" width="1000" height="354"> ');
	window.scrollTo(0, 0);
	initializeStatsForPlayers(curSessionGlobalVar.players);
	intro();
}


function processCombinedSession(){
	var tmpcurSessionGlobalVar = curSessionGlobalVar.initializeCombinedSession();
	if(tmpcurSessionGlobalVar){
		curSessionGlobalVar = tmpcurSessionGlobalVar
		$("#story").append("<br><Br> But things aren't over, yet. The survivors manage to contact the players in the universe they created. Their sick frog may have screwed them over, but the connection it provides to their child universe will equally prove to be their salvation. Time has no meaning between universes, and they are given ample time to plan an escape from their own Game Over. They will travel to the new universe, and register as players there for session <a href = 'index2.html?seed=" + curSessionGlobalVar.session_id + "'>"+curSessionGlobalVar.session_id +"</a>. ");
		checkSGRUB();
		load(curSessionGlobalVar.players); //in loading.js
	}else{
		//scratch fuckers.
		curSessionGlobalVar.makeCombinedSession = false;  //can't make a combo session, so scratch
		renderScratchButton(curSessionGlobalVar);
	}

}

and yellowYard specifically is:
curSessionGlobalVar.addEventToUndoAndReset(null);
and  restartSession (in controller)
	
	
Okay. So, it looks like initiazeStatsForPlayers is called on the existing players. But the players themselves aren't remade. So, might not even have to worry about YellowYard?

EMERGENCY:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~found the source of yellow yard shenanigans.  PLAYERS are being reinitialized, but their sprites are NOT!!!!!!!!!!!
	this is a good opporunity to have a method to reinit all things, including land and levels so that created players can be called with this.
	method should have programtic shit, not random shit. don't re-roll hair, do recalc land. 
	
Okay. things seem to be working. had to stop testing cause stuff. need to reorganize my thoughts.

I honestly think new char creator is working. Just need to test yellow yard. test by changing player hair colors (trolls are an obvious target). should cause the sim to have 0 changes, but be obvious that it's a custom character.
	