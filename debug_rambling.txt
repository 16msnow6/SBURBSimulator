sim=true
2
2175

2
2175

sim=false
2
659
2870


sim == false
no intro/loading
2
1000


sim == true
no intro/loading
2
1000

even with everything off, those 2 are still being got.
why?
oh, time till reckoning and sessionType. i will initialize them to non random.


now simmode gets me 2040, with intro and loading. instead of 2175. so confused.

simodd false (so rendering) gets me
659
2870

so whether or not there is more in rendering is different for different sessions.

what if only intro, no tick
659
800

vs

1000

so rendering uses 459 more seeds. why.

okay, lets look at the "real" sim.
real page	ai finder simulation = false
977		659
2870		2870

I wonder why rendering has the console statements print
out in 2 parts, and not consistently in 2 parts?
Like...both things have 2870 as the second part.
But the first part is different. Why?

The second part seems to be the important part...
The MVP of the session was: Grim Dark Heir of Rage's Corpse with a power of: 203
The MVP of the session was: Grim Dark Heir of Rage's Corpse with a power of: 203
Both have same result, even same power (which means everything was the same, basically)

IS THE SEED GETTING RESET?
Is that why only number of seeds being got AFTER a point matter?

Nope. only called once.

Okay. What do I know?

There is a problem even in the intro stuff.
That greatly shortens the stuff I have to look into.

Simulation = false is identical to the real stuff,
so only need to debug one page.

Question: What happens in the intro (when sim=false).

Where/when does it differ from sim-true?

Both intros are identical.  But...use different amount of seeds?  Okay,
maybe directly measureing seeds isn't the best way? with regular ticks on,
 where do they start to differ?

4kmonitor ftw that i can put these side by side to compare


!!!!!!!!!!!!!!!!!!!!!!!!!
The very last thing that is the same is
The Maid of Void makes a general nuisance of themselves to the Black Queen.

Then,sim-false the Heir of Rage black flirts with Knight of Space,
 and gets rejected. Then ectobiology happens.

Then,sim-true, "
The Heir of Rage has taken an acrobatic fucking pirouette off the handle and into a giant pile of crazy. They engage Murder Mode while thinking of their enemies Knight of Space and Seer of Time and Page of Light and Rogue of Mind and Sylph of Heart and Thief of Breath. This is completely terrifying. "


Yeah, that would hella cause a difference between sessions.

So, is relationshipChat somehow using up randomness?
There is a space for a chatlog in the sim-true version...
But, the relationshipDrama should still be happening, just not being rendered....
it's not the first chat, but it IS the first relationship chat.

HR is antagonizing a jerk, which means they are indeed triggered (possibly just as much as when they engage murder mode)

printing out the text that would have been there, it is the same for both of them.
drawRelationshipChat doesn't seem to consume random.

Okay, what if I allow that thing to render, but nothing else. Does source of difference dissappear?


....What. The. Hell. It freaking APPEARS TO!? Smae MVP with same power and everything. This makes no sense.
I'm not actually even rendering anything but text, 'cause still no loading.

Alright. WHY is this happening?


Alright, well, drawChat and drawRelationshipChat are actually pretty similar. So look for their differences.

dRC gets the relationship to know if they should render heart or spade or nothing. Is that it? Doesn't appear to consume
a seed. if i comment it out, will sim-false do an accrobatic piorrette (both literally and figuarativelY)

Yep. Still doesn't make sense. But NOT rendering the heart or spade causes acrobatic pirouettes.

Look deeper.

It's not from rendering their empty buffers. still acrobatic pirouette

Is it getting the relationship? No.

Is it drawing the symbol?

Is it .....fuck. FUCK!!!!

I'm asking the relationship what type it is! That's WRONG! That's allowing it to recalculate
the relationship (for example, fall out of love). I'm supposed to be querying the savedType.
THAT was consuming the random!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!I AM THE GREEEEEEETEST!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Also, now I need to go make sure anywhere i'm using type() is saved_type unless i really meant it.

Fuck. Fuck. It's still happening though, even though i found an obvious use of random seeds.

Oh god, I just realized that before when i was rendering empty buffers, I thought it was right that it was still pirouetting.
that's wrong. damng.

Wait. no, that's actually right. the rendered version is wrong. acrobatic piroutte is right because it's when less seeds.

compare both versions.










And now for something entirely different. This is the best place to put a ramble, but it's not even at the debug phase yet.

Problem: I wish to change exactly one thing in a session, at a specific point in time.

Related information.

I have a several ways to identify a point in time in session, but none of them are currently accessible in a meaninful way.

*  Tick:  There are both regular and reckoning ticks. this information is indirectly available in the sesion's "timeTillReckoning" variable. it's negative after a reckoning.
* Scene Index:  I have a list of "scenesTriggered" in the sesion, which is how I summarize a session, partly. This list is not guaranteed to be useful. I'm pretty sure it just adds the scene in the scene list. The same scene can appear multiple times, and will in fact be changed over time (for example, corpse smooch will have different players attached to it.)


Sub problems:
* Identify an important event.
* add an event before the important event.



"add an event before the important event." appears to be the easier subproblem. I will tackle it first.
Given that I have a way of identifying an event, I need to have a scene that triggers right before that event. If it's based on tick, then trigger will happen when this.session.timeTileReckoning=x. if it's based on scenesTriggered index, then it will happen when this.session.scenesTriggered.length = x; That SHOULD be all I need.  scene should not repeat, and should have absolutely highest priority...or...hrrm.

SHOULD it have highest priority? It just needs to happen before the important event, right. But "timeTillReckoning" can have many scenes called. So if i give it highest priority, it might happen several scenes before it should.

CONSTRAINT FOUND:  Scenes need to be identified by scenesTriggered index, not timeTillReckoning. This makes sense in retrospect.


PROBLEM FOUND: scenesTriggered index will not be consistent between timelines.

I need them to be.  The whole point is that the Observer (that's you, btw) gets to make a decision after a virgin doomed timeline happens.
So,they insert a scene that wasn't there before. Which by definition alters the index of the previous thingy.



Alright, think about this in more detail.

Sequence of Events:

Session procedes on the regular and ends in tear-jerking tragedy.

At the very end, AB and I show up.

I offer the Observer and time player a yard's worth of Decisions.

Session reloads, then procedes on the regular until the time player warps in to make a change.

Session is altered. Either ends in  tear-jerking  tragedy, or in less tragedy, or success.

If tear-jerking tragedy, At the very end, AB and I show up.

I offer the Observer and time player a yard's worth of Decisions, including the decision to undo their previous decision.


Session reloads, then procedes on the regular until the time player warps in to make a change.  Both THIS decision will be implemented AND the previous decision (unless you decided to undo this.)


Repeat until either Observer gives up or there is no more tear-jerking tragedy.





So, once more:



PROBLEM: scenesTriggered index will not be consistent between timelines.

Brainstorm Solutions:

add array to SaveDoomedTimeLines.  List of scene indexes to alter.  No, make new object that has index/result function pairings?

no...if being that different, make new scene.  YellowYardResult or some shit.

If I am careful to play the new scene juuust before the old one, then....wait. okay. no.
I was going to say "resave the old scene index +1", but that won't be true every time. or even consistently. if a new scene has been added before me, add 1, else it's the same. hrrrrm...

so, YellowYardResult will also have a boolean if a new scene has been added yet. (only one new scene can be added a runthrough.) if yes, increment your scene_trigger_id. if no, do nothing.






Okay, I"m sure that's not enough to work just yet, but it's enough to start. BUT, there is still another subproblem I have not yet addressed:



* Identify an important event.

How do humans do this?

Types of important events:
	* a player dying
	* a player engaging murder mode
	* a player going grim dark
	* jack being promoted.
	* frog breeding


So, how do I decide which events to include in my Yellow Yard? Through the session summary code, I know I can find if MurderPlayer has happened. But that scene can result in a murder or result in clubs/diamonds.

Okay, well, when I say "player dying", do I mean a permanent death, or any death?

Should I have scenes be capable of creating a "ImportantEvent" object to give to their session?

That might solve both sub problems. If a scene creates the important event BEFORE RENDERING, it can trigger the session to go to it's YellowYardResult object or whatever and decide whether or not the event should be altered.

I am tentatively optimistic.


So, obviously if i was in a sane language, I'd have different types of Important Events subclass out from the main one, but javascript does not give a fuck.
Should Important Events be like scenes (i.e. a different class for each event), or should it be a big stupid jumble. Problem with different classes/files is it gets cumbersome including it in html documents and also is spoilers.

big stupid jumble it is. but like, a hybrid jumble, with the different objects in a single file.

An Important Event has a human readable label, and a function that is how to prevent that Event. (both the text/image to display and the results.  like player.dead = false. or whatever.)
It should also have an importanceRating, because if I have more than a Yard's worth, I have to trim the list SOMEHOW.

when a session is done and qualifies for a YellowYard, I display the list of important events that happened this session. One is selected and saved in the YellowYardResult object or whatever.

 Then, the session is redone. Just like before, each time an ImportantEvent happens, the session asks the YellowYardResult if it's allowed to happen.  This time, for one of them, YellowYardResult says "no".
 It says "no" because the ImportantEvent perfectly matches the saved event.

 Example of match.:

 ImportantEvent.subtype = "Player dies with a living dream self without God Tiering."
 ImportantEvent.player = "Heir of Life"


Note: this means that this Important Event can be matched even if it is under very different circumstances. For example, the timeline can vastly change, but so long as the Hier of Life still dies without godtiering, this event would be altered. Do I want this?

For the authorBot, a good way to check if a session has changed before now is the check the value of the MVP. If things are mostly the same besides cosmetic stuff, this value will also be the same.

Alright,

 ImportantEvent.subtype = "Player dies with a living dream self without God Tiering."  (automatically decides importanceRating)
 ImportantEvent.player = "Heir of Life"
 ImportantEvent.mvp_value = 342

 BAM, now altered events are mostly stable.

 Okay, where was I?

 Okay, so the YellowYardResult has found a match. it tells the session, which returns to the scene that calls it. The scene does not render itself, and instead render the ImportantEvent.alternateTimeLine(); I need to make sure this function changes all relevant variables. Or...

 Hrrm...  Let's say the ImportantEvent was the GrimDark MurderMode Heir of Life dying.   The scene kills them, (which clears our their status modifiers), and then asks if it can render the result. It is told no, and ImportantEvent.alternateTimeline brings them back to life.  But it doesn't know they were GrimDark MurderMode and doesn't restore that.

 That clearly is unacceptable.

 So, the scene should create an ImportantEvent BEFORE modifying anything. Not just before rendering.  But the problem is that many scenes modify things over time. Hrrrm.  Well, the important event can be PART of a scene.   Example, jack starts to show his stabs to the Heir of Life and the Maid of Mind, but the Bard of Time warps in and carts the Heir of Life's corpse to their sacrificial slab/quest bed.

 Okay, at this point I'm just waffling to avoid coding because once I start this will be real and WHAT IF IT'S STILL IMPOSSIBLE!?  Time to code.





 TODO:   22577

 why is page of time god tier twice listed? is it just first?  in subsequent loops its life that gets repeated

 add alternate scenes for all important events
  make player not die is NOT just an alternate to god tiering. god tiering deals with corpses, but not dying needs to be the scene that MAKES the corpse

 add scene for undoing your own undoing. basically generate list from scenesToUndo.  add before killing players list.
 
 
 
 
 Problem. Trying to remove functional duplicates from importantEvents. Objects aren't literally the same, but values are.
 
 Current way is looping through an inner loop and an outter loop. problem is that let's say my array is:
 
 [1,2,3,4,1,2,3,4,1]
 
 In the outter loop I look for "1".  I find it two additional times, and mark the extras for removal. I succesfully don't mark 'myself'.
 
 But...then, the fourth element, the second 1, when i loop on THAT, I find the first 1. And mark it for removal. And thus ALL 1s are marked for removal.
 
 How to fix?
 
 Well, I could probably extend javascripts native filter thing. But i don't want to . I'm feeling intellectually lazy.
 
 hrrrrm.
 
 Well, the inner loop doesn't HAVE to start from zero. It can start from the outter loop index. that should do it.
 
                                                                                                                                                      
                          ```````   `                 `  ``   `                        ```````                           `                            
                      ```` `   `   ````           `````   `   `````               ````  `   `` ````                ````  `   ``` `                    
                   ```               ````        ```             ````           ```                ```          ```             ````                  
                  ``                   ```      ``                 ```         ```                  ```        ```                ``                  
           `````..``.`..`````````.``.``-``.``..`..``.```.``..``.``.``.``.``.``-`.-``.``.`..``.``.``..`..``.``.``.```..``.``..`..````..````            
           `.-............-..-...-.....-........................................................................-.......................-.`           
           `.-..........................................................................................................................-.`           
           `......:-....-::::::::::----:++++++++++++++oo+++::::::::::::::...::::::::::::::---------::::::::::::::::::::::::::-....-:......`           
           `.-..../.                 -ohddddddddddddddddddhh+`           `.`                                                      ./....-.`           
           `......+.              .+yhddddddddddddddddmmmmmddy.          `.`                            `     `                   .+......`           
       `````.-....+.           `:shddddddddddddddddmNNNNNNNNmdy.         `.``.+o+.`  `.oo/.           .sh   .sh                   .+....-.` ```       
     ```   `......+.         -ohdddddddddddddddmmNNNNNNNNNNNNmdy`        `.`  +d+      sd:             yd    yd                   .+......`   ```     
     ```   `.:....+.         .yddddddddddddmmddNNNNmshNNNNmmNNmdo        `.`  +d+      sd-    ---:.    yd    yd    `---:.         .+....:.`    ```    
    ```    `......+-          `+hdddddddddms:-hNdyo.``:shmN+omNdh-       `.`  +do------yd-  -s.``-ho   yd    yd   /o```-ss`       -+......`    ```    
    ```    `.-....+:            .ohddddddy-``.:-.````````.-:`-NNdo       `.`  +d+``````yd-  yy:::://`  yd    yd  -h:    -do       :+....-.`    ```    
     ```   `......+-              .+hdddds```````````````````.NNmh.      `.`  +d+      sd-  yh.    .`  yd    yd  :do    `d+       -+......`    ```    
     ```   `.-..../.                .sddddy-`````````````````+Nmdo`      `.`  odo      yd:  -yho//+:   yd    yd   +h/` `/o`  /o.  ./....-.`    ``     
       `````....../.                 -yddddh/```````````````/dyo-        `.``.:::.`  `.::-`  `-//:.   .::.  .::.   .::-..    -/`  ./......` ````      
        ````......+.                /hddddddds:``````````.-/:.`          `.`                                                      .+......````        
           `......+.               -ddmddddddddo-..-//+ohms              `.`                                                      .+......`           
           `.-....+.              -hdNmddddddddddhhdddddyNh              `.`                                                      .+....-.`           
           `-.....+.           .-ohddmdddddddddddhhdddddso:              `.`                                                      .+.....-`           
          ``......+.          .ohdddddddddddddddhs/ddddddh:              `.`                                                      .+......`           
        ````......+.         ```:hdddddddddddddh+--/hdddddh-             `.`                                                      .+......`````       
      ```  `......+-      ``````.hddddddddddddho....+dddddy`             `.`                                                      -+......`  ```      
     ````  `.:...-+:   ``````` `odddddddddddddo/-..-+sdds/.``            `.`                                                      :+-...:.`   ```     
     ```   `....../-`````````   :sssssssyyyyyys+o++o+syyo `````          `.`               ````````````````                       -/......`    ``     
     ```   `........````````````--------:::::::::::::::::.````````````````.````````````````````````````````````````````````````````.......`    ``     
     ```   `....../```````      -+syyyhhhhhhhhhddddddhyo/.    ```        `.`                                                      `+......`   ```     
      ``   `.....-+`   `````       ``.shdddddddddddddo         ```       `.`                                                      `+-.....`   ```     
       ``` `.....-+`      `````   ````-/hddddddddddddh-         ```      `.`                                                      `+-.....`  ``       
         ```.-...-+`          ````````..:oddddddddddddh.         ```     `.`                                                      `+-...-.```         
           `.....-+.                 :shyddddddddddddddy.         ```    `.`                                                      .+-.....`           
           `.-...-+.                 sddddddddddddddddddy.        ```    `.`                                                      .+-...-.`           
           `......+`                 ydddddddddddddddddddh.        ```   `.`                                                      `+......`           
        ````......+`                -hydddddddddddddddddddy`        ``   `.`                                                      `+......`````       
      ```  `......+`                +hsdddddddddddddddddddds`        ``  `.`                                                      `+......`  ````     
     ```   `.....-+`                +y+hddddddddddddddddddddo         `` `.`                                                      `+-.....`   ```     
     ```   `.-...-+`                ys+yddddddddddddddddddddd/         ` `.`                                                      `+-...-.`    ```    
     ```   `.....-+`               -d++sdddddddddddddddddddddh-        ```.`                                                      `+-.....`    ```    
     ```   `:....-+`               -s++ohhhhhddhdddddddhhhhyso+        ` `..`                                                     `+-....:`   ```     
      ``   `.....-+`                .++++++oooo-::::/oooo++++++.         `..`                                                     `+-.....`   ```     
       ````..-...:+`                -+++++++++/      :+++++++++/         `.`                                                      `+:...-.` ````      
        ```......-+.                -+++++++++/       /+++++++++.        `.`                                                      .+-......```        
           `.-...:+.                -+++++++++/       `+++++++++/        `.`                                                      .+:...-.`           
           `.-...-+-                -+++++++++/        :+++++++++`       `.`                                                      -+-...-.`           
           ......./:...--:::::::::--://///////:......--://///////::::::::...::::::::::::::--------:::::::::::::::::::::::::::--...:/.......           
           ..-..........................................................................................................................-..           
           ..-........-...-..-..................................................................................-..............-........-..           
           `````-``.``.```.`````..`..`..``-``-``-``..``.```-``.```.``.`..``.`..`..`..`..`.``..`..``-``.``.``..``.```-```.``-```.``.``-`````     
		   
		   
		   
		   
		   
		   
		   
		   
		   
		   
		   
Okay, now that THAT's out of the way....

time to update the Rare Session Finder.

my original thought was to have a new page entirely, where you can pick what you want to look for from a drop down menu, and then AuthorBot prints a list of sessions out that match your criteria.  But karmicRetribution has an intriguing idea: On the 'stats' section, have them be clickable to filter sessions out.

So: Design time.

~~~~Sequence of Events:

Page is loaded.  Can pick number of sessions to check, and click "check sessions."

Stats for All Sessions updated with each session, and stats for A session print below.

Click on a total stat line, and it filters sessions to only be ones where that value is 'true'.   Total stats now only reflect filtered list?  Button added to delete all filters. 
~~~~~~~~~~~~~~~~~~~~~

So, I will have to refactor some stuff.

Right now the way total session stats are calculated is each session adds to a global variable when they are asked to summarize themselves. if i were to call that multiple times, it would inflate the value. and there is no way to get it for only a subset of sessions.

bluh. bob warned me about global variables. he told me, dog.


So, instead of having global variables, have each session contain a summary object (much like a player snapshot).  When I ask for a session's summary, it generates this object.  Move the "summary HTML" code outside of the object itself. just make it a global function. Then, I get combo stats by asking all sessions in an array to give me their stats. 

have sessions array, and filteredSessions array.  Sessions array is never modified. filteredSessions array is always a object by object copy (even if there is nothing to filter by). 

what happens if they check a session while it's filtered?  








